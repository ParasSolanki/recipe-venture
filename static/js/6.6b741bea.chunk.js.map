{"version":3,"sources":["icons/ArrowNarrowRightIcon.jsx","hooks/useRecipes.js","components/RecipeCard.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","modules/CuisinesSlugRecipesPage.jsx","pages/Cuisine.jsx","hooks/useHasCuisine.js","utils/filter-cuisine-recipes.js"],"names":["ArrowNarrowRightIcon","xmlns","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","useRecipes","useState","recipes","setRecipes","useEffect","a","fetch","PATHS","data","json","fetchRecipes","RecipeCard","recipe","src","image","alt","name","excerpt","to","slug","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","CuisinesSlugRecipesPage","cuisine","AppLayout","map","index","Cuisine","useParams","loading","setLoading","setCuisine","found","setFound","Set","cuisineSlug","includes","useHasCuisine","history","useHistory","reduce","temp","length","push","filterCuisineRecipes","document","title","string","replaceAll","charAt","toUpperCase","slice","Loader"],"mappings":"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","file":"static/js/6.6b741bea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function ArrowNarrowRightIcon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"h-6 w-6\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      stroke=\"currentColor\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M17 8l4 4m0 0l-4 4m4-4H3\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport * as PATHS from \"../constants/paths\";\r\n\r\nexport default function useRecipes() {\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      const data = await fetch(PATHS.RECIPE_URL);\r\n      const { recipes } = await data.json();\r\n      setRecipes(recipes);\r\n    };\r\n    fetchRecipes();\r\n    return () => {\r\n      setRecipes([]);\r\n    };\r\n  }, []);\r\n  return {\r\n    recipes,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowNarrowRightIcon from \"../icons/ArrowNarrowRightIcon\";\r\n\r\nexport default function RecipeCard({ recipe }) {\r\n  return (\r\n    <div className=\"max-w-sm mx-auto sm:mx-0 bg-gray-100 dark:bg-gray-700 rounded-md shadow-lg overflow-hidden\">\r\n      <div className=\"w-full h-44\">\r\n        <img\r\n          src={recipe.image}\r\n          alt={recipe.name}\r\n          className=\"w-full h-full object-cover\"\r\n        />\r\n      </div>\r\n      <div className=\"p-4\">\r\n        <h2 className=\"text-2xl line-clamp-2 font-semibold text-gray-800 dark:text-white mb-3 leading-tight\">\r\n          {recipe.name}\r\n        </h2>\r\n        <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3\">\r\n          {recipe.excerpt}\r\n        </p>\r\n        <Link\r\n          to={`/recipes/${recipe.slug}`}\r\n          className=\"inline-flex items-center justify-between text-white text-sm px-3 py-1 bg-purple-500 hover:bg-purple-400 dark:hover:bg-purple-400  rounded focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 dark:focus:ring-offset-gray-700 focus:ring-purple-500\"\r\n        >\r\n          Read More\r\n          <span className=\"ml-1\">\r\n            <ArrowNarrowRightIcon />\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport AppLayout from \"./layouts/AppLayout\";\r\nimport RecipeCard from \"../components/RecipeCard\";\r\n\r\nexport default function CuisinesSlugRecipesPage({ cuisine, recipes }) {\r\n  //\r\n  return (\r\n    <AppLayout>\r\n      <section className=\"py-20\">\r\n        <div className=\"container mx-auto px-4\">\r\n          <div className=\"mb-8\">\r\n            <div className=\"bg-purple-600 w-36 h-1 rounded mb-3\"></div>\r\n            <h1 className=\"text-4xl text-gray-900 dark:text-white font-semibold\">\r\n              {cuisine} recipes\r\n            </h1>\r\n          </div>\r\n          <div className=\"grid gap-x-4 gap-y-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4\">\r\n            {recipes.map((recipe, index) => (\r\n              <RecipeCard key={index} recipe={recipe} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </AppLayout>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport useHasCuisine from \"../hooks/useHasCuisine\";\r\nimport useRecipes from \"../hooks/useRecipes\";\r\nimport CuisinesSlugRecipesPage from \"../modules/CuisinesSlugRecipesPage\";\r\nimport { filterCuisineRecipes } from \"../utils/filter-cuisine-recipes\";\r\n\r\nexport default function Cuisine() {\r\n  const { slug } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [cuisine, setCuisine] = useState(\"\");\r\n  const { recipes: data } = useRecipes();\r\n  const { found } = useHasCuisine(slug);\r\n\r\n  const history = useHistory();\r\n  const recipes = filterCuisineRecipes(data, slug);\r\n\r\n  // uppercase first letter\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Cuisine | Recipe Venture\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (found === true) {\r\n      setCuisine(capitalizeFirstLetter(slug.replaceAll(\"-\", \" \")));\r\n      setLoading(false);\r\n    } else if (found === false) {\r\n      history.push(\"/*\");\r\n    }\r\n  }, [recipes, slug, found, history]);\r\n\r\n  return !loading ? (\r\n    <CuisinesSlugRecipesPage cuisine={cuisine} recipes={recipes} />\r\n  ) : (\r\n    <Loader />\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport * as PATHS from \"../constants/paths\";\r\n\r\nexport default function useHasCuisine(slug) {\r\n  const [cuisine, setCuisine] = useState(\"\");\r\n  const [found, setFound] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      const data = await fetch(PATHS.RECIPE_URL);\r\n      const { recipes } = await data.json();\r\n      const res = [...new Set(recipes.map((recipe) => recipe.cuisineSlug))];\r\n\r\n      if (res.includes(slug)) {\r\n        setFound(true);\r\n        setCuisine(slug);\r\n      } else {\r\n        setFound(false);\r\n      }\r\n    };\r\n    fetchRecipes();\r\n    return () => {\r\n      setCuisine(\"\");\r\n    };\r\n  }, [slug]);\r\n\r\n  return {\r\n    cuisine,\r\n    found,\r\n  };\r\n}\r\n","export const filterCuisineRecipes = (recipes = [], slug = \"\") => {\r\n  return recipes.reduce((temp, recipe) => {\r\n    if (recipe.cuisineSlug === slug && temp.length < 150) {\r\n      temp.push(recipe);\r\n    }\r\n    return temp;\r\n  }, []);\r\n};\r\n"],"sourceRoot":""}